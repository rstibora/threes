version: "3.8"

services:
  threes-db-service:
    build: ./db
    volumes:
      - ./.data:/var/lib/postgresql/data
    networks:
      - threes-network
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - THREES_DB_PASSWORD=threes
      - KEYCLOAK_DB_PASSWORD=keycloak

  threes-keycloak-service:
    build: ./keycloak
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB_URL=jdbc:postgresql://threes-db-service:5432/threes_two?currentSchema=keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=keycloak
    networks:
      - threes-network
    ports:
      - "8443:8080"
    depends_on:
    - threes-db-service

  threes-hasura-service:
    image: hasura/graphql-engine
    environment:
      - HASURA_GRAPHQL_DATABASE_URL=postgres://postgres:postgres@threes-db-service:5432/threes_two
      - HASURA_GRAPHQL_ENABLE_CONSOLE=true
    networks:
      - threes-network
    ports:
      - "8080:8080"
    depends_on:
      - threes-db-service

  threes-hasura-cli-service:
    build: ./hasura-cli
    networks:
      - threes-network
    depends_on:
      - threes-hasura-service
    # volumes:
      # - ./threes:/hasuracli/threes

  threes-backend-service:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    command: python ./threes/manage.py runserver 0.0.0.0:8000
    networks:
      - threes-network
    ports:
      - "8000:8000"
    volumes:
      - ./:/code
      - type: bind
        source: /mnt/ramdisk
        target: /static_frontend
        read_only: true
    environment:
      - DJANGO_DEBUG=1
      - DJANGO_SECRET_KEY=foo
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
      - THREES_DB_PASSWORD=threes
      - POSTGRES_HOST=threes-db-service
      - POSTGRES_PORT=5432
    depends_on:
      - threes-db-service

  threes-frontend-service:
    command: bash -c "npm install --also=dev && npm run serve-dev"
    networks:
      - threes-network
    ports:
    - "8082:8082"
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./:/code
      - /mnt/ramdisk:/output/
    depends_on:
      - threes-backend-service

networks:
  threes-network:
